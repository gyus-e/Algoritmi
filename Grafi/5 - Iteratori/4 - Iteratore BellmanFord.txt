È un iteratore offline: elabora tutto il grafo nel costruttore

BellmanFordIterator (G)
{
    if (V.Size() == 0)
    {
        throw exception
    }

    s = V[0]
    d[] = InitDistance (G)
    d[s] = 0

    for i = 0 to V.Size() - 1
        for each u in V 
            for each v in Adj[u]
                Relax (u, v, w)
    
    
    for each u in V    
        for each v in Adj[u]
            if d[v] < d[u] + w (u, v)
                ciclo_negativo = true

        //salviamo i vertici in un ABR ordinato secondo le distanze calcolate
        ABR.Insert(u)

    //il curr è sempre il minimo, che viene anche staccato dall'albero
    curr = ABR.DetachMin()
}

Operator++ ()
{
    if (Terminated())
    {
        throw exception
    }
   
    curr = ABR.DetachMin()
}

Operator* ()
{
    return curr
}

Terminated ()
{
    return ABR.Empty()
}

Reset ()
{
    ABR.Clear()
    for each u in V
        ABR.Insert(u)
}