/* ********************************* */
L'algoritmo per il calcolo delle CFC Ã¨ diviso in:
1: DFS sul grafo, in postorder inserisce vertici in uno stack
2: Calcolo del grafo trasposto
3: DFS sul grafo trasposto nell'ordine dato dallo stack
/* ********************************* */

DFS (G)
	stack = NIL
	
	color [] = Init (G)
	for each v in V
		if color[v] == bianco then
			stack = DFS_visit (G,v,stack)
	
	return stack


DFS_visit (G,s, stack)
	color[s] = grigio
	
	for each v in Adj[s]	
		if color[v] == bianco then 
			stack = DFS_visit (G,v, stack)
	
	color[s] = nero
	
	stack = push (stack, s) //in postorder, prima di uscire
	return stack

/* ********************************* */

Trasposto (G)
	V' = NIL
	Adj' [|V|];

	for each v in V 
		V' = V' U {v}
		for each u in Adj[v]
			Adj'[u] = Adj'[u] U {v}
	
	G' = (V', Adj')
	return G'

/* ********************************* */

CFC (G')
	stack = DFS (G)
	G' = Trasposto (G)
	color [] = Init (G')
	
	while (stack != NIL)
		v = top (stack)
		pop (stack)
		if (color [v] == bianco)
			CFC_visit (G', v) //esplora solo la componente fortemente connessa di v
	
CFC_visit (G', s)
	color [s] = grigio 
	
	for each v in Adj[s]
	
		if color [v] == bianco 
			CFC_visit (G',v)
	
	color [s] = nero 