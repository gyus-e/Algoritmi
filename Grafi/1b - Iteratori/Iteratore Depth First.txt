Iteratore Depth First

//preorder e postorder sono molto simili
Constructor (G)
	i = 0;
	if (G.Size() > 0)
	{
		c = Init (G);
		v = V[i]; //=V[0]
		S = Singleton(v,itr) //itr è un iteratore
		c[v] = nero
		
		LeftMostLeaf() //Solo se postorder
		//foglia piú a sinistra nell'albero radicato in v della foresta di visita
	}

Terminated()
	return (i >= G.Size())
	
Successor()

	while S != NIL
	{
		(v, itr) = & S.top() //riferimento al top dello stack
		while (! this->Terminated())
		{
			w = *itr; //
			itr++; //modifica in place dell'iteratore in cima allo stack
			
			if (c[w] == bianco)
			{
				S = push (S, (w,0))
				c[w] = nero
				
				
				LeftMostLeaf();//Solo se postorder
				
				return;
			}
		}
		S.Pop() //solo pre-order
	}